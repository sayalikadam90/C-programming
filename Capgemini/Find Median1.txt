#include <iostream>

using namespace std;

int getMedian(int ar1[], int ar2[], int n, int m)
{
    int i = 0; 
    int j = 0; 
    int count;
    int m1 = -1, m2 = -1;
 
    
    if((m + n) % 2 == 1)
    {
        for (count = 0; count <= (n + m)/2; count++)
        {
            if(i != n && j != m)
            {
                m1 = (ar1[i] > ar2[j]) ? ar2[j++] : ar1[i++];
            }
            else if(i < n)
            {
                m1 = ar1[i++];
            }
           
            else
            {
                m1 = ar2[j++];
            }
        }
        return m1;
    }
     
  
    else
    {
        for (count = 0; count <= (n + m)/2; count++)
        {
            m2 = m1;
            if(i != n && j != m)
            {
                m1 = (ar1[i] > ar2[j]) ? ar2[j++] : ar1[i++];
            }
            else if(i < n)
            {
                m1 = ar1[i++];
            }
            
            else
            {
                m1 = ar2[j++];
            }
        }
        return (m1 + m2)/2;
    }
}
 
 
void sort(int arr[], int n){
    int temp;
    for(int i=0;i<n;i++){
        for(int j=i;j<n;j++){
            if(arr[j]>arr[j+i]){
                temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
        }
    }
} 


int removeDup(int arr[], int n)
{
    if (n==0 || n==1)
        return n;

    int temp[n];
    int j = 0;
    for (int i=0; i<n-1; i++)

        if (arr[i] != arr[i+1])
            temp[j++] = arr[i];

    temp[j++] = arr[n-1];

    for (int i=0; i<j; i++)
        arr[i] = temp[i];

    return j;
}

int main()
{
    int ar1[50];
    int ar2[50];
    int n1,n2;
    
    cout<<"Enter size1 : ";
    cin>>n1;
    
    cout<<"Enter size2 : ";
    cin>>n2;
    
    cout<<"Enter elements of ar1 : "<<endl;
    for(int i=0;i<n1;i++)
    {
        cin>>ar1[i];
    }
    
    cout<<"Enter elements of ar2 : "<<endl;
    for(int i=0;i<n2;i++)
    {
        cin>>ar2[i];
    }
    
    sort(ar1, n1);
    sort(ar2, n2);

    n1 = removeDup(ar1, n1);
    n2 = removeDup(ar2, n2);
    
 
    cout << getMedian(ar1, ar2, n1, n2);
    return 0;
}